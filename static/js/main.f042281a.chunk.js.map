{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","items","perPageSelector","selectedPage","setSelectedPage","numberOfPages","Math","ceil","length","Number","className","href","onClick","prev","filter","_","index","map","el","from","to","numbers","n","push","getNumbers","App","useState","setPerPageSelector","pageBottomLimit","pageTopLimit","id","value","onChange","e","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"8KAOaA,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,gBACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,gBAGIC,EAAgBC,KAAKC,KAAKN,EAAMO,OAASC,OAAOP,IAEtD,OACE,mCACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAgC,IAAjBP,GAAsB,YAAlD,SACE,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAAc,OACdC,QAAS,WACc,IAAjBT,GAIJC,GAAgB,SAAAS,GAAI,OAAIA,EAAO,MAVnC,oBAiBAZ,EACGa,QAAO,SAACC,EAAGC,GAAJ,OAAcA,EAAQX,KAC7BY,KAAI,SAACC,EAAIF,GAAL,OACH,oBACEN,UAAS,oBAAeP,IAAiBa,EAAQ,GAAK,UADxD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVC,KAAI,WAAMK,EAAQ,GAClBJ,QAAS,WACPR,EAAgBY,EAAQ,IAL5B,SAQGA,EAAQ,KAVNE,MAeb,oBAAIR,UAAS,oBAAeP,IAAiBE,GAAiB,YAA9D,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAAc,QACdC,QAAS,WACHT,IAAiBE,GAIrBD,GAAgB,SAAAS,GAAI,OAAIA,EAAO,MAVnC,0BCtDJZ,ECLC,SAAoBkB,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBP,KAAI,SAAAK,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAA8CC,mBAAS,KAAvD,mBAAOxB,EAAP,KAAwByB,EAAxB,KACA,EAAwCD,mBAAS,GAAjD,mBAAOvB,EAAP,KAAqBC,EAArB,KAEMwB,GAAmBzB,EAAe,GAAKM,OAAOP,GAC9C2B,EAAepB,OAAOP,GAAmBC,EAE/C,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACkCyB,EAAkB,EADpD,eAEM,MAFN,uBAGMC,GAAgB5B,EAAMO,OAASqB,EAAe5B,EAAMO,OAH1D,eAIM,OAJN,uBAKMP,EAAMO,OALZ,OAQA,sBAAKE,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO7B,EACP8B,SAAU,SAACC,GACTN,EAAmBM,EAAEC,OAAOH,OAC5B3B,EAAgB,IAPpB,UAUE,wBAAQ2B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACET,MAAOA,EACPC,gBAAiBA,EACjBC,aAAcA,EACdC,gBAAiBA,IAEnB,6BACGH,EACEa,QAAO,SAACC,EAAGC,GACV,OAAOA,GAASY,GACXZ,EAAQa,KAEdZ,KAAI,SAAAC,GAAE,OACL,oBAAI,UAAQ,OAAZ,SAA6BA,GAALA,YE5DpCkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.f042281a.chunk.js","sourcesContent":["type Props = {\n  items: string[];\n  perPageSelector: string;\n  selectedPage: number;\n  setSelectedPage: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    items,\n    perPageSelector,\n    selectedPage,\n    setSelectedPage,\n  },\n) => {\n  const numberOfPages = Math.ceil(items.length / Number(perPageSelector));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={`page-item ${selectedPage === 1 && 'disabled'}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => {\n              if (selectedPage === 1) {\n                return;\n              }\n\n              setSelectedPage(prev => prev - 1);\n            }}\n          >\n            «\n          </a>\n        </li>\n        {\n          items\n            .filter((_, index) => index < numberOfPages)\n            .map((el, index) => (\n              <li\n                className={`page-item ${selectedPage === index + 1 && 'active'}`}\n                key={el}\n              >\n                <a\n                  data-cy=\"pageLink\"\n                  className=\"page-link\"\n                  href={`#${index + 1}`}\n                  onClick={() => {\n                    setSelectedPage(index + 1);\n                  }}\n                >\n                  {index + 1}\n                </a>\n              </li>\n            ))\n        }\n        <li className={`page-item ${selectedPage === numberOfPages && 'disabled'}`}>\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => {\n              if (selectedPage === numberOfPages) {\n                return;\n              }\n\n              setSelectedPage(prev => prev + 1);\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPageSelector, setPerPageSelector] = useState('5');\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const pageBottomLimit = (selectedPage - 1) * Number(perPageSelector);\n  const pageTopLimit = Number(perPageSelector) * selectedPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${pageBottomLimit + 1}\n          ${' - '}\n          ${pageTopLimit <= items.length ? pageTopLimit : items.length}\n          ${' of '}\n          ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPageSelector}\n            onChange={(e) => {\n              setPerPageSelector(e.target.value);\n              setSelectedPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        items={items}\n        perPageSelector={perPageSelector}\n        selectedPage={selectedPage}\n        setSelectedPage={setSelectedPage}\n      />\n      <ul>\n        {items\n          .filter((_, index) => {\n            return index >= pageBottomLimit\n              && index < pageTopLimit;\n          })\n          .map(el => (\n            <li data-cy=\"item\" key={el}>{el}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}